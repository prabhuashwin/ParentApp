/*! lozad.js - v1.16.0 - 2020-09-06
* https://github.com/ApoorvSaxena/lozad.js
* Copyright (c) 2020 Apoorv Saxena; Licensed MIT */
;!function(a,b){"object"==typeof exports&&"undefined"!=typeof module?module.exports=b():"function"==typeof define&&define.amd?define(b):a.lozad=b()}(this,function(){var d="undefined"!=typeof document&&document.documentMode,e={rootMargin:"0px",threshold:0,load:function(q){if("picture"===q.nodeName.toLowerCase()){var k=q.querySelector("img"),f=!1;null===k&&(k=document.createElement("img"),f=!0),d&&q.getAttribute("data-iesrc")&&(k.src=q.getAttribute("data-iesrc")),q.getAttribute("data-alt")&&(k.alt=q.getAttribute("data-alt")),f&&q.append(k)}if("video"===q.nodeName.toLowerCase()&&!q.getAttribute("data-src")&&q.children){for(var m=q.children,g=void 0,j=0;j<=m.length-1;j++){(g=m[j].getAttribute("data-src"))&&(m[j].src=g)}q.load()}q.getAttribute("data-poster")&&(q.poster=q.getAttribute("data-poster")),q.getAttribute("data-src")&&(q.src=q.getAttribute("data-src")),q.getAttribute("data-srcset")&&q.setAttribute("srcset",q.getAttribute("data-srcset"));var h=",";if(q.getAttribute("data-background-delimiter")&&(h=q.getAttribute("data-background-delimiter")),q.getAttribute("data-background-image")){q.style.backgroundImage="url('"+q.getAttribute("data-background-image").split(h).join("'),url('")+"')"}else{if(q.getAttribute("data-background-image-set")){var l=q.getAttribute("data-background-image-set").split(h),p=l[0].substr(0,l[0].indexOf(" "))||l[0];p=-1===p.indexOf("url(")?"url("+p+")":p,1===l.length?q.style.backgroundImage=p:q.setAttribute("style",(q.getAttribute("style")||"")+"background-image: "+p+"; background-image: -webkit-image-set("+l+"); background-image: image-set("+l+")")}}q.getAttribute("data-toggle-class")&&q.classList.toggle(q.getAttribute("data-toggle-class"))},loaded:function(){}};function b(f){f.setAttribute("data-loaded",!0)}var a=function(f){return"true"===f.getAttribute("data-loaded")},c=function(f){var g=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document;return f instanceof Element?[f]:f instanceof NodeList?f:g.querySelectorAll(f)};return function(){var f,y,h=0<arguments.length&&void 0!==arguments[0]?arguments[0]:".lozad",A=1<arguments.length&&void 0!==arguments[1]?arguments[1]:{},q=Object.assign({},e,A),m=q.root,j=q.rootMargin,v=q.threshold,z=q.load,p=q.loaded,B=void 0;"undefined"!=typeof window&&window.IntersectionObserver&&(B=new IntersectionObserver((f=z,y=p,function(g,i){g.forEach(function(l){(0<l.intersectionRatio||l.isIntersecting)&&(i.unobserve(l.target),a(l.target)||(f(l.target),b(l.target),y(l.target)))})}),{root:m,rootMargin:j,threshold:v}));for(var w,k=c(h,m),x=0;x<k.length;x++){(w=k[x]).getAttribute("data-placeholder-background")&&(w.style.background=w.getAttribute("data-placeholder-background"))}return{observe:function(){for(var g=c(h,m),i=0;i<g.length;i++){a(g[i])||(B?B.observe(g[i]):(z(g[i]),b(g[i]),p(g[i])))}},triggerLoad:function(g){a(g)||(z(g),b(g),p(g))},observer:B}}});